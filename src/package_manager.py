import subprocess
import sys
from typing import List


class PackageManager:
	def __init__(self, aur_helper: str = "paru"):
		"""
		:param aur_helper: AUR-—Ö–µ–ª–ø–µ—Ä - "paru", "yay" –∏ —Ç.–¥.
		"""

		self.aur_helper = aur_helper
		self._validate_helpers()


	def _validate_helpers(self):
		"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ pacman –∏ AUR-—Ö–µ–ª–ø–µ—Ä."""

		try:
				subprocess.run(["pacman", "--version"], stdout=subprocess.DEVNULL, check=True)
		except FileNotFoundError:
				sys.exit("‚ùå pacman –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ Arch Linux.")

		try:
				subprocess.run([self.aur_helper, "--version"], stdout=subprocess.DEVNULL, check=True)
		except FileNotFoundError:
				sys.exit(f"‚ùå AUR-—Ö–µ–ª–ø–µ—Ä '{self.aur_helper}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")


	def is_installed(self, package: str) -> bool:
		"""–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç"""

		try:
			result = subprocess.run(
				["pacman", "-Q", package],
				stdout=subprocess.DEVNULL,
				stderr=subprocess.DEVNULL,
				check=False
			)
			return result.returncode == 0
		except Exception:
			return False
		
	
	def install_package(self, packages: List[str], skip_installed: bool = True) -> None:
		"""
		–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤.
		:param packages: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω –ø–∞–∫–µ—Ç–æ–≤.
		:param skip_installed: –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã.
		"""

		if not packages:
			print("‚ÑπÔ∏è –ù–µ—Ç –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.")
			return


		if skip_installed:
			packages = [p for p in packages if not self.is_installed(p)]

			if not packages:
				print("‚úÖ –í—Å–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
				return

		print(f"üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {len(packages)} –ø–∞–∫–µ—Ç–æ–≤...")
		try:
			subprocess.run([self.aur_helper, "-S", "--needed", "--noconfirm"] + packages, check=True)
			print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
		except subprocess.CalledProcessError as e:
			print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")
			sys.exit(1)
		